!function(e){"use strict";window.angular.module("emanage.user",[]).provider("$apiEndpoint",function(){var t;return{set:function(e){t=e},$get:function(){return t}}})}(),function(){"use strict";function e(r,e){function n(e){return e.data}function s(e){throw Error(e.message||"Ops! That's embarassing, but seems like something didn't go well. ")}this.apiUrl=e+"users/",this.getAll=function(){return r.get(this.apiUrl).then(n,s)},this.get=function(e){if(isNaN(e)||parseInt(e)<=0)throw Error("This is not a valid user ID!");var t=this.apiUrl+e;return r.get(t).then(n,s)},this.post=function(e){return r.post(this.apiUrl,e).then(n,s)},this.put=function(e){if(isNaN(e.id)||parseInt(e.id)<=0)throw Error("This is not a valid user ID!");var t=this.apiUrl+e.id;return r.put(t,e).then(n,s)}}angular.module("emanage.user").service("userService",e),e.$inject=["$http","$apiEndpoint"]}(),function(e){"use strict";function t(t,r){var n=this;n.$onInit=function(){},n.edit=function(e){e.isValid&&t.put(e.user).then(function(){r.go("userDetail",{id:n.user.id})})}}window.angular.module("emanage.user").component("editUser",{templateUrl:"app/modules/user/components/edit-user/edit-user.html",controller:t,controllerAs:"$ctrl",bindings:{user:"<"}}),t.$inject=["userService","$state"]}(),function(e){"use strict";function t(t,r){var e=this;e.$onInit=function(){e.user={name:null,age:null,address:null}},e.add=function(e){e.isValid&&t.post(e.user).then(function(e){r.go("userDetail",{id:e})})}}window.angular.module("emanage.user").component("newUser",{templateUrl:"app/modules/user/components/new-user/new-user.html",controller:t,controllerAs:"$ctrl"}),t.$inject=["userService","$state"]}(),function(e){"use strict";window.angular.module("emanage.user").component("userEditor",{templateUrl:"app/modules/user/components/user-editor/user-editor.html",controller:function(){var n=this;n.submitForm=function(e,t){if(e){var r={isValid:e,user:t};n.onSubmit({result:r})}}},controllerAs:"$ctrl",bindings:{user:"<",onSubmit:"&"}})}(),function(e){"use strict";e.module("emanage.user").component("userList",{templateUrl:"/app/modules/user/components/user-list/user-list.html",controller:e.noop,controllerAs:"$ctrl",bindings:{users:"<"}})}(window.angular),function(e){"use strict";e.module("emanage.user").component("userViewer",{templateUrl:"app/modules/user/components/user-viewer/user-viewer.html",controller:e.noop,controllerAs:"$ctrl",bindings:{user:"<"}})}(window.angular);var app=angular.module("eManage.app",["ui.router","emanage.user"]);function setStates(t){[{name:"userList",url:"/list",template:'<user-list users="$resolve.users"></user-list>',resolve:{users:["userService",function(e){return e.getAll()}]}},{name:"newUser",url:"/new",component:"newUser"},{name:"editUser",url:"/user/:id",template:'<edit-user user="$resolve.user"></edit-user>',resolve:{user:["userService","$stateParams",function(e,t){var r=t.id;return e.get(r)}]}},{name:"userDetail",url:"/detail/:id",template:'<user-viewer user="$resolve.user"></user-viewer>',resolve:{user:["userService","$stateParams",function(e,t){var r=t.id;return e.get(r)}]}}].forEach(function(e){t.state(e)})}setStates.$inject=["$stateProvider"],app.config(setStates),app.config(["$locationProvider","$urlRouterProvider","$apiEndpointProvider",function(e,t,r){r.set("http://localhost:60815/api/"),e.hashPrefix("!"),t.otherwise("/list")}]);